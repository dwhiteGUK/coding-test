import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Album.module.css'

const Album = ({ data }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Album Photos</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Album
        </h1>

        <div className={styles.grid}>
          {data.map(({ id, title, url }) => (
            <div key={id} className={styles.card}>
              <div>
                <Image
                  src={url}
                  layout="responsive"
                  width={600}
                  height={600}
                />
              </div>
              <h2>{title}</h2>
            </div>
          ))}
        </div>
      </main>
    </div>
  )
}

export default Album


export async function getStaticPaths() {
  const res = await fetch('https://jsonplaceholder.typicode.com/albums')
  const posts = await res.json()

  // Get the paths we want to pre-render based on posts
  const paths = posts.map(({ id }) => ({
    params: { id: id.toString() },
  }))

  // We'll pre-render only these paths at build time.
  // { fallback: false } means other routes should 404.  
  return { paths, fallback: false }
}

export async function getStaticProps({ params }) {
  // params contains the post `id`.
  // If the route is like /posts/1, then params.id is 1
  const res = await fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${params.id}`)
  const data = await res.json()

  if (res.status === 404 && res.statusText === 'Not Found') {
    return {
      notFound: true,
    }
  }

  return {
    props: { data },
  }
}


